_description: &description
  en: |
    Generates The resources in each directory of `src/` `model/` `template/` in this project.
    The results are reflected in each directory of `dest/` `doc/` `script/`.

    *Generator input files*

    - `src/`
      Stores static resources that are not processed the generator.
      The contents of this directory are copied directly into the `dest/` directory.

    - `model/`
      Stores the static model data files written in *YAML* or *JSON* format used for the generation.

    - `template/`
      This directory contains the template files used for the generation.
      Files with a extension `.hbs` will be handled as templates. All other files are copied as is.

      - `template/dest` `template/doc` `template/scripts`
        Each of these directories contains the template files of the resource to be output
        in the directory `dest/` `doc/` `scripts`.

      - `template/model` `template/template`
        These directories store template files updating the contents of `template/` and `model/` used for the generation.
        If the content of `template/` `model/` is updated as a result of the generation,
        the generation process is executed recursively.
        The changes to `template/` `model/` that occur during the above process are treated as an intermediate state
        and will be lost after the completion of the process.
        Use the *--dry-run* option to check these intermediate files.

    *Generator output files*

    - `dest/`
      Outputs the source files of applications and modules created as the result of
      the generation process.

    - `doc/`
      Outputs the project documentation.

    - `scripts/`
      Outputs various scripts used in development and operation.

  ja: |
    このプロジェクト内の資源を自動生成します。
    `src/` `model/` `template/` の各ディレクトリに格納された資源をもとに自動生成を行い、その結果を`dest/` `doc/` `script/` の各ディレクトリに反映します。

    *自動生成入力ファイル*

    - `src/`
      自動生成の対象とならない静的な資源を格納します。
      このディレクトリの内容は `dest/` 配下にそのままコピーされます。

    - `model/`
      自動生成で使用されるYAMLもしくはJSON形式で記述された静的なモデルデータを格納します。

    - `template/`
      自動生成で使用されるテンプレートファイルを格納します。ファイル拡張子に `.hbs` を含むファイルがテンプレートして扱われます。
      それ以外のファイルはそのままコピーされます。

      - `template/dest` `template/doc` `template/scripts`
        これらのディレクトリはそれぞれ、`dest/` `doc/` `scripts`の各ディレクトリに出力される資源のテンプレートを格納します。

      - `template/model` `template/template`
        自動生成で使用される`template/` `model/`の内容を更新するためのテンプレートを格納します。
        自動生成の結果、`template/` `model/` の内容が更新された場合は、自動生成処理を再帰的に実行します。
        なお、上記処理中に発生した`template/` `model/`への変更は、中間状態として扱われるため、処理完了後は失われます。
        これらの中間ファイルを確認するためには *--dry-run* オプションを使用してください。

    *自動生成結果ファイル*

    - `dest/`
      自動生成の結果作成されるアプリケーションやモジュールのソースファイル等を出力します。

    - `doc/`
      プロジェクトのドキュメントを出力します。

    - `scripts/`
      開発・運用で使用する各種スクリプトを出力します。

  zh: |
    生成本项目中每个`src/` `model/` `template/`目录下的资源。
    结果反映在`dest/` `doc/` `script/`的每个目录中。

    *生成器输入文件*

    - `src/`
      存储未被生成器处理的静态资源。
      这个目录的内容直接复制到`dest/`目录中。

    - `model/`
      存储以 *YAML* 或 *JSON* 格式编写的静态模型数据文件，用于生成。

    - `template/`
      这个目录中包含了用于生成的模板文件。
      扩展名为`.hbs`的文件将作为模板处理。所有其他文件都会被复制。

      - `template/dest` `template/doc` `template/scripts`
        这些目录中的每一个目录都包含要输出的资源的模板文件，其目录为 `dest/`doc/`scripts`。

      - `template/model` `template/template`
        这些目录存储模板文件，更新生成过程中使用的`template/`和`model/`的内容。
        如果在生成过程中更新了 `template/` `model/` 的内容，则生成过程将递归执行。
        在上述过程中发生的对 `template/` `model/` 的变化被视为中间状态，并在过程完成后丢失。
        使用 *--dry-run* 选项来检查这些中间文件。

    *生成器输出文件*

    - `dest/`
      输出作为生成过程的结果的应用程序和模块的源文件。

    - `doc/`
      输出项目文件。

    - `scripts/`
      输出开发和操作中使用的各种脚本。

_options: &options
- name: help
  short_name: h
  is_flag: true
  description:
    en: |
      Displays how to use this command.
    ja: |
      このコマンドの使用方法を表示します。
    zh: |
      显示如何使用此命令。

- name: verbose
  short_name: v
  is_flag: true
  description:
    en: |
      Displays more detailed command execution information.
    ja: |
      より詳細なコマンドの実行情報を表示します。
    zh: |
      显示更详细的命令执行信息。

- name: dry-run
  short_name: d
  is_flag: true
  description:
    en: |
      After this command is processed, the generated files are output to the `.NEXT` directory
      without reflecting to the folders of `dest/` `doc/` `scripts/`.
      In addition, the difference between the contents of the `.NEXT` directory and the current files.
      This directory also contains any intermediate files created during the generation.
    ja: |
      自動生成処理を実行後、生成されたファイルを`dest/` `doc/` `scripts/`の各フォルダに反映せずに、`.NEXT`ディレクトリに出力します。
      また、`.NEXT`ディレクトリの内容と現在のファイルの差異を出力します。
      このディレクトリには自動生成中に作成された中間ファイルも含まれます。
    zh: |
      该命令处理完毕后，生成的文件将被输出到`.NEXT`目录下。
      不反映到`dest/`doc/`doc/`scripts/`文件夹中。
      此外，`.NEXT`目录的内容与当前文件之间的差异。
      这个目录还包含了在生成过程中创建的任何中间文件。

- name: max-recursion
  short_name: r
  default_value: |
    10
  description:
    en: |
      The upper limit of the number of times to execute recursively
      when the contents of the `model/` `template/` directory are updated
      during the generation process.
    ja: |
      自動生成処理中に`model/` `template/`ディレクトリの内容が更新された場合に、
      再帰的に自動生成処理を実行する回数の上限。
    zh: |
      当`model/` `template/`目录的内容在生成过程中被更新时，递归执行的次数上限。

project:
  scripts:
  - name: generate
    description: *description
    options: *options